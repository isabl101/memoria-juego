{"version":3,"sources":["components/MemoBlock/MemoBlock.js","components/Board/Board.js","App.js","reportWebVitals.js","index.js"],"names":["MemoBlock","animating","handleMemoClick","memoBlock","className","onClick","flipped","emoji","Board","memoBlocks","map","i","emojiList","App","useState","shuffledMemoBlocks","setShuffledMemoBlocks","selectedMemoBlock","setselectedMemoBlock","setAnimating","useEffect","shuffledEmojiList","shuffleArray","index","a","length","j","Math","floor","random","flippedMemoBlock","shuffledMemoBlocksCopy","splice","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAceA,EAZG,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,gBAAiBC,EAA9B,EAA8BA,UAA9B,OACd,qBAAKC,UAAU,aAAaC,QAAS,kBAAQF,EAAUG,UAAYL,GAAcC,EAAgBC,IAAjG,SACI,sBAAKC,UAAS,2BAAsBD,EAAUG,SAAW,sBAAzD,UACI,qBAAKF,UAAU,qBAEf,qBAAKA,UAAU,kBAAf,SACKD,EAAUI,cCKZC,G,MAVD,SAAC,GAA8C,IAA7CP,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,gBAAiBO,EAAgB,EAAhBA,WACxC,OACI,sBAAML,UAAU,QAAhB,SACKK,EAAWC,KAAK,SAACP,EAAWQ,GACzB,OAAO,cAAC,EAAD,CAA2CV,UAAWA,EAAWC,gBAAiBA,EAAiBC,UAAWA,GAA9G,UAAmBQ,EAAnB,YAAwBR,EAAUI,eCJnDK,EAAS,YAAO,8FA8CPC,EA5CH,WAAO,IAAD,EACoCC,mBAAS,IAD7C,mBACTC,EADS,KACWC,EADX,OAEkCF,mBAAS,MAF3C,mBAETG,EAFS,KAEUC,EAFV,OAGkBJ,oBAAS,GAH3B,mBAGTb,EAHS,KAGEkB,EAHF,KAKhBC,qBAAW,WACT,IAAMC,EAAoBC,EAAa,GAAD,mBAAKV,GAAL,YAAmBA,KACzDI,EAAsBK,EAAkBX,KAAK,SAACH,EAAOI,GAAR,MAAe,CAAEY,MAAOZ,EAAGJ,QAAOD,SAAS,SACvF,IAEH,IAAMgB,EAAe,SAAAE,GACnB,IAAK,IAAIb,EAAIa,EAAEC,OAAS,EAAGd,EAAI,EAAGA,IAAK,CACnC,IAAMe,EAAIC,KAAKC,MAAMD,KAAKE,UAAYlB,EAAI,IADP,EAEpB,CAACa,EAAEE,GAAIF,EAAEb,IAAvBa,EAAEb,GAFgC,KAE5Ba,EAAEE,GAF0B,KAIvC,OAAOF,GAwBT,OACE,cAAC,EAAD,CAAOf,WAAYM,EAAoBd,UAAWA,EAAYC,gBAtBxC,SAAAC,GACtB,IAAM2B,EAAgB,2BAAQ3B,GAAR,IAAmBG,SAAS,IAC9CyB,EAAsB,YAAOhB,GACjCgB,EAAuBC,OAAO7B,EAAUoB,MAAO,EAAGO,GAClDd,EAAsBe,GACG,OAAtBd,EACDC,EAAqBf,GACbc,EAAkBV,QAAUJ,EAAUI,MAC9CW,EAAqB,OAErBC,GAAa,GACbc,YAAW,WACTF,EAAuBC,OAAO7B,EAAUoB,MAAO,EAAGpB,GAClD4B,EAAuBC,OAAOf,EAAkBM,MAAO,EAAGN,GAC1DD,EAAsBe,GACtBb,EAAqB,MACrBC,GAAa,KACZ,UC5BMe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2390e548.chunk.js","sourcesContent":["import './MemoBlock.css';\r\n\r\nconst MemoBlock = ({animating, handleMemoClick, memoBlock}) => (\r\n    <div className=\"memo-block\" onClick={() => (!memoBlock.flipped && !animating) && handleMemoClick(memoBlock)}>\r\n        <div className={`memo-block-inner ${memoBlock.flipped && 'memo-block-flipped'}`}>\r\n            <div className=\"memo-block-front\">\r\n            </div>\r\n            <div className=\"memo-block-back\">\r\n                {memoBlock.emoji}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default MemoBlock;","import MemoBlock from '../MemoBlock/MemoBlock';\r\nimport './Board.css';\r\n\r\nconst Board = ({animating, handleMemoClick, memoBlocks}) => {\r\n    return (\r\n        <main className=\"board\">\r\n            {memoBlocks.map( (memoBlock, i) => {\r\n                return <MemoBlock key={`${i}_${memoBlock.emoji}`} animating={animating} handleMemoClick={handleMemoClick} memoBlock={memoBlock} />\r\n            })}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Board;","import './App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport Board from './components/Board/Board';\r\nconst emojiList = [...'🎀🧸🍬🍩🌈⭐🌻🍉'];\r\n\r\nconst App = () => {\r\n  const [shuffledMemoBlocks, setShuffledMemoBlocks] = useState([]);\r\n  const [selectedMemoBlock, setselectedMemoBlock] = useState(null);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  useEffect( () => {\r\n    const shuffledEmojiList = shuffleArray([...emojiList, ...emojiList]);\r\n    setShuffledMemoBlocks(shuffledEmojiList.map( (emoji, i) => ({ index: i, emoji, flipped: false}) ));\r\n  }, []);\r\n\r\n  const shuffleArray = a => {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  const handleMemoClick = memoBlock => {\r\n    const flippedMemoBlock = { ...memoBlock, flipped: true };\r\n    let shuffledMemoBlocksCopy = [...shuffledMemoBlocks];\r\n    shuffledMemoBlocksCopy.splice(memoBlock.index, 1, flippedMemoBlock);\r\n    setShuffledMemoBlocks(shuffledMemoBlocksCopy);\r\n    if(selectedMemoBlock === null) {\r\n      setselectedMemoBlock(memoBlock);\r\n    } else if(selectedMemoBlock.emoji === memoBlock.emoji) {\r\n      setselectedMemoBlock(null);\r\n    } else {\r\n      setAnimating(true);\r\n      setTimeout(() => {\r\n        shuffledMemoBlocksCopy.splice(memoBlock.index, 1, memoBlock);\r\n        shuffledMemoBlocksCopy.splice(selectedMemoBlock.index, 1, selectedMemoBlock);\r\n        setShuffledMemoBlocks(shuffledMemoBlocksCopy);\r\n        setselectedMemoBlock(null);\r\n        setAnimating(false);\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Board memoBlocks={shuffledMemoBlocks} animating={animating}  handleMemoClick={handleMemoClick} />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}